[
    {
        "id": "file_upload_flow",
        "type": "tab",
        "label": "File Upload Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ui_tab_upload",
        "type": "ui_tab",
        "name": "文件上传",
        "icon": "file_upload",
        "disabled": false,
        "hidden": false,
        "order": 1,
        "home": true
    },
    {
        "id": "file_upload_group",
        "type": "ui_group",
        "name": "文件上传",
        "tab": "ui_tab_upload",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "file_input",
        "type": "ui_template",
        "z": "file_upload_flow",
        "group": "file_upload_group",
        "name": "File Input",
        "order": 1,
        "width": "12",
        "height": "4",
        "format": "<style>\n.file-list {\n    margin: 10px 0;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    min-height: 50px;\n}\n.file-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 5px;\n    border-bottom: 1px solid #eee;\n}\n.file-item:last-child {\n    border-bottom: none;\n}\n.remove-btn {\n    color: red;\n    cursor: pointer;\n    padding: 0 10px;\n}\n.progress-container {\n    width: 100%;\n    background-color: #f1f1f1;\n    border-radius: 4px;\n    margin: 5px 0;\n    overflow: hidden;\n    display: none;\n}\n.progress-bar {\n    width: 0%;\n    height: 20px;\n    background-color: #4CAF50;\n    text-align: center;\n    line-height: 20px;\n    color: white;\n    transition: width 0.3s ease;\n}\n</style>\n<input type=\"file\" id=\"fileInput\" style=\"width:100%\" multiple />\n<div id=\"fileList\" class=\"file-list\"></div>\n<div id=\"progressContainer\" class=\"progress-container\">\n    <div id=\"progressBar\" class=\"progress-bar\">0%</div>\n</div>\n<button id=\"uploadBtn\" style=\"width:100%; padding: 10px; margin-top: 10px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer;\">开始上传</button>\n<script>\n(function(scope) {\n    let selectedFiles = [];\n    const fileInput = document.getElementById('fileInput');\n    const fileList = document.getElementById('fileList');\n    const uploadBtn = document.getElementById('uploadBtn');\n    const progressContainer = document.getElementById('progressContainer');\n    const progressBar = document.getElementById('progressBar');\n    \n    // 将removeFile函数绑定到window对象\n    window.removeFileFromList = function(index) {\n        selectedFiles.splice(index, 1);\n        updateFileList();\n    };\n    \n    function updateFileList() {\n        fileList.innerHTML = selectedFiles.length === 0 ? \n            '<div style=\"text-align: center; color: #999;\">未选择任何文件</div>' : '';\n            \n        selectedFiles.forEach((file, index) => {\n            const item = document.createElement('div');\n            item.className = 'file-item';\n            item.innerHTML = `\n                <span>${file.name} (${(file.size / 1024).toFixed(2)} KB)</span>\n                <span class=\"remove-btn\" onclick=\"removeFileFromList(${index})\">×</span>\n            `;\n            fileList.appendChild(item);\n        });\n    }\n    \n    function updateProgress(current, total) {\n        const percent = Math.round((current / total) * 100);\n        progressBar.style.width = percent + '%';\n        progressBar.textContent = percent + '%';\n    }\n    \n    fileInput.addEventListener('change', function(e) {\n        Array.from(e.target.files).forEach(file => {\n            selectedFiles.push(file);\n        });\n        updateFileList();\n        fileInput.value = '';\n    });\n    \n    uploadBtn.addEventListener('click', function() {\n        if (selectedFiles.length === 0) {\n            scope.send({payload: '请先选择文件'});\n            return;\n        }\n        \n        progressContainer.style.display = 'block';\n        updateProgress(0, selectedFiles.length);\n        uploadBtn.disabled = true;\n        \n        let uploadedCount = 0;\n        \n        selectedFiles.forEach((file, index) => {\n            const reader = new FileReader();\n            reader.onload = function(e) {\n                scope.send({\n                    payload: {\n                        index: index,\n                        total: selectedFiles.length,\n                        filename: file.name,\n                        size: file.size,\n                        data: e.target.result\n                    }\n                });\n                \n                uploadedCount++;\n                updateProgress(uploadedCount, selectedFiles.length);\n                \n                if (uploadedCount === selectedFiles.length) {\n                    setTimeout(() => {\n                        progressContainer.style.display = 'none';\n                        uploadBtn.disabled = false;\n                        selectedFiles = [];\n                        updateFileList();\n                    }, 1000);\n                }\n            };\n            reader.readAsDataURL(file);\n        });\n    });\n    \n    // 初始化显示\n    updateFileList();\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 120,
        "y": 120,
        "wires": [["function_node"]]
    },
    {
        "id": "function_node",
        "type": "function",
        "z": "file_upload_flow",
        "name": "Handle File Upload",
        "func": "if (msg.payload && msg.payload.filename) {\n    // 构建上传进度消息\n    const progress = `正在上传 ${msg.payload.filename} (${(msg.payload.size / 1024).toFixed(2)} KB) - ${msg.payload.index + 1}/${msg.payload.total}`;\n    \n    // 发送到状态显示\n    node.send([{\n        payload: progress\n    }, {\n        payload: {\n            method: 'POST',\n            url: 'http://your-server-url/upload',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            payload: msg.payload\n        }\n    }]);\n} else {\n    // 如果是普通消息，直接发送到状态显示\n    node.send([{\n        payload: msg.payload\n    }, null]);\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 120,
        "wires": [["ui_text"], ["http_request"]]
    },
    {
        "id": "http_request",
        "type": "http request",
        "z": "file_upload_flow",
        "name": "Send to Server",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 550,
        "y": 160,
        "wires": [["ui_text"]]
    },
    {
        "id": "ui_text",
        "type": "ui_text",
        "z": "file_upload_flow",
        "group": "file_upload_group",
        "order": 2,
        "width": "12",
        "height": "1",
        "name": "Status",
        "label": "状态:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 120,
        "wires": []
    }
]
